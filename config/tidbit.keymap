/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define FUNC    1
#define ALT     2

&encoder_1_top_row {
	status = "disabled";
};

&encoder_4 {
	status = "okay";
};

/ {
	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&encoder_4>;
	};

	keymap {
		compatible = "zmk,keymap";
            // &rgb_ug RGB_COLOR_HSB(215, 100, 50)
            label = "Default";
            // activate-behaviors = <
	        //     &rgb_ug RGB_COLOR_HSB(215, 100, 50)
			// >;

            // deactivate-behaviors = <
            //     &rgb_ug RGB_COLOR_HSB(0, 100, 50)
            // >;		
		default_layer {
			bindings = <
						   &kp KP_SLASH     &kp KP_ASTERISK  &kp KP_MINUS
				&kp KP_NUMBER_7    &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS
				&kp KP_NUMBER_4    &kp KP_NUMBER_5  &kp KP_NUMBER_6  &none
				&kp KP_NUMBER_1    &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER
				&kp C_PLAY_PAUSE   &kp KP_NUMBER_0  &kp KP_DOT       &tog 1
			>;

			sensor-bindings = <&inc_dec_kp TAB LS(TAB)>;
		};

		 func_layer {
            // &rgb_ug RGB_COLOR_HSB(275, 100, 50)
            label = "Function";
			 bindings = <
						 &kp KP_SLASH     &kp KP_ASTERISK  &kp KP_MINUS
				&kp KP_NUMBER_7  &kp UP           &kp KP_NUMBER_9  &kp KP_PLUS
				&kp LEFT         &kp DOWN         &kp RIGHT        &none
				&kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER
				&kp C_MUTE       &kp KP_NUMBER_0  &kp KP_DOT       &to 2
			 >;

			 sensor-bindings = <&inc_dec_kp BSPC DEL>;
		 };
		  alt_layer {
            // &rgb_ug RGB_COLOR_HSB(35, 100, 50)
            label = "Alternate";
			 bindings = <
						&none           &reset          &bootloader
				&out OUT_TOG    &out OUT_USB    &out OUT_BLE    &bt BT_CLR
				&bt BT_SEL 0    &bt BT_PRV      &bt BT_NXT      &none
				&bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &none
				&kp C_MUTE      &none           &none           &to 0			 >;

			 sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
		 };
	};
};
